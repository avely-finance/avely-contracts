scilla_version 0

(***************************************************)
(*             Associated libraries                *)
(***************************************************)
  
(***************************************************)
(*             The contract definition             *)
(***************************************************)

contract Azil

(*  Parameters *)
(owner     : ByStr20)

(* Mutable fields *)

(* Our specific transitions *)

(************************************************************)
(* @dev: Deposit undelegated zil, use our node              *)
(************************************************************)
transition DepositUndelegatedZilOurNode()

end

(************************************************************)
(* @dev: Deposit undelegated zil, use custom node           *)
(************************************************************)
transition DepositUndelegatedZilCustomNode()

end

(************************************************************)
(* @dev: Deposit delegeted zil, change node to our one      *)
(************************************************************)
transition DepositDelegatedZilOurNode()

end

(************************************************************)
(* @dev: Deposit delegeted zil, do not change node          *)
(************************************************************)
transition DepositDelegatedZil()

end

(************************************************************)
(* @dev: Deposit delegeted zil, change node to custom one   *)
(************************************************************)
transition DepositDelegatedZilCustomNode()

end

(************************************************************)
(* @dev: Withdraw zil using standart way                    *)
(************************************************************)
transition Widhtraw()

end

(* Standart token transitions *)

(* @dev: Moves an amount tokens from _sender to the recipient. Used by token_owner. *)
(* @dev: Balance of recipient will increase. Balance of _sender will decrease.      *)
(* @param to:  Address of the recipient whose balance is increased.                 *)
(* @param amount:     Amount of tokens to be sent.                                  *)
transition Transfer(to: ByStr20, amount: Uint128)

end

(* @dev:  Change minter address *)
transition ChangeMinter(new_minter: ByStr20)

end

(* @dev:  Mint new tokens. Only smart contract can mint, default minter is owner *)
(* @param recipient: Address of the recipient whose balance is to increase.      *)
(* @param amount:    Number of tokens to be minted.                              *)
transition Mint(recipient: ByStr20, amount: Uint128)

end

(* @dev: Increase the allowance of an approved spender over the caller's tokens.                                     *)
(* param spender:      Address of the designated approved spender.                                                   *)
(* param amount:       Number of tokens to be increased as allowance for the approved spender.                       *)
transition IncreaseAllowance(spender: ByStr20, amount: Uint128)

end

(* @dev: Decrease the allowance of an approved spender over the caller's tokens.                                   *)
(* param spender:      Address of the designated approved spender.                                                 *)
(* param amount:       Number of tokens to be decreased as allowance for the approved spender.                     *)
transition DecreaseAllowance(spender: ByStr20, amount: Uint128)

end

(* @dev:  Burn tokens. Only smart contract can burn, same as minter          *)
(* @param recipient: Address of the recipient whose balance is to decrease.  *)
(* @param amount:    Number of tokens to be burned.                          *)
transition Mint(recipient: ByStr20, amount: Uint128)

end

(* @dev: Move a given amount of tokens from one address to another using the allowance mechanism. The caller must be an approved_spender. *)
(* @dev: Balance of recipient will increase. Balance of token_owner will decrease.                                                        *)
(* @param from:    Address of the token_owner whose balance is decreased.                                                                 *)
(* @param to:      Address of the recipient whose balance is increased.                                                                   *)
(* @param amount:  Amount of tokens to be transferred.                                                                                    *)
transition TransferFrom(from: ByStr20, to: ByStr20, amount: Uint128)

end

end